name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1 ▸ Code holen
    - uses: actions/checkout@v4

    # 2 ▸ Toolchain + SDK installieren
    - name: Install Android & Buildozer tools
      run: |
        set -e          # brich bei erstem Fehler ab
        sudo apt-get update
        sudo apt-get install -y openjdk-17-jdk python3-pip unzip wget ccache

        pip install --upgrade cython buildozer

        # ---------- Android command-line tools ----------
        export ANDROID_SDK_ROOT="$HOME/android-sdk"
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        cd "$ANDROID_SDK_ROOT"

        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline.zip
        unzip -qq cmdline.zip -d cmdline-tools/tmp
        rm cmdline.zip
        mv cmdline-tools/tmp/cmdline-tools cmdline-tools/latest
        rmdir cmdline-tools/tmp

        # ▶︎ PATH **JETZT** aktualisieren, damit sdkmanager sofort gefunden wird
        export PATH="$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools"
        # und für Folgeschritte verfügbar machen
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
        echo "$ANDROID_SDK_ROOT/platform-tools"           >> "$GITHUB_PATH"

        # ---------- Pakete + Lizenzen ----------
        yes | sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
        yes | sdkmanager --licenses

    # 3 ▸ APK bauen – Log in Datei umleiten
    - name: Build debug APK
      run: |
        set -o pipefail
        buildozer -v android debug 2>&1 | tee buildozer_full.log

    # 4 ▸ Vollständiges Log hochladen
    - name: Upload buildozer log
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-log
        path: buildozer_full.log
