name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1 ▸ Repository auschecken
    - uses: actions/checkout@v4

    # 2 ▸ Buildozer-Cache (spart ~5-10 min)
    - name: Cache .buildozer
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ./.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}-v5
        restore-keys: |
          ${{ runner.os }}-buildozer-

    # 3 ▸ Python 3.11 (p4a < 2024.10 braucht 3.11)
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    # 4 ▸ Java, Android SDK/NDK & System-Libs installieren
    - name: Install Android SDK/NDK & system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          openjdk-17-jdk python3-pip unzip wget ccache \
          autoconf automake libtool libtool-bin libltdl-dev pkg-config

        export ANDROID_SDK_ROOT="$HOME/android-sdk"
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        cd "$ANDROID_SDK_ROOT"
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline.zip
        unzip -qq cmdline.zip -d cmdline-tools/tmp
        mv cmdline-tools/tmp/cmdline-tools cmdline-tools/latest
        rm cmdline.zip && rmdir cmdline-tools/tmp

        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
        echo "$ANDROID_SDK_ROOT/platform-tools"       >> "$GITHUB_PATH"
        # Legacy-Symlink: make sdkmanager available under tools/bin
        mkdir -p "$ANDROID_SDK_ROOT/tools/bin"
        ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_SDK_ROOT/tools/bin/sdkmanager"
